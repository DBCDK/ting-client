<?php

/**
 * @file
 * Webservice mockup of Open Agency
 */
function openagency_webservice_mockup_menu() {
  $items['openagency_webservice'] = array(
    'page callback' => 'openagency_webservice_mockup_request',
    'access callback' => 'openagency_webservice_mockup_access',
  );

  return $items;
}

/**
 * Faking the request and returns result. If other requests are made than on city = københavn an error will be returned.
 * @return String json
 */
function openagency_webservice_mockup_request() {
  $path = drupal_get_path('module', 'openagency_webservice_mockup');
  $data = file_get_contents('php://input');
  
  $envelope = openagency_webservice_mockup_parse_xml($data);
  
  $request = $envelope->Body->children()->pickupAgencyListRequest;
  $city = $request->city;
  $outPut = $request->outputType;
  
  if($city != 'københavn'){
    drupal_add_http_header('Content-Type', 'application/json');
    $resp = file_get_contents($path.'/no_agencies_found.json');
    print $resp;
    return;
  }
  
  switch ($outPut) {
    case 'json':
      drupal_add_http_header('Content-Type', 'application/json');
      $resp = file_get_contents($path.'/københavn.json');
      break;
    case 'xml':
      drupal_add_http_header('Content-Type', 'text/xml; charset=utf-8');
      $resp = file_get_contents($path.'/københavn.xml');
      break;
    default :
      case 'json':
      drupal_add_http_header('Content-Type', 'application/json');
      $resp = file_get_contents($path.'/københavn.json');
      break;
  }
  
  print $resp;
}

/**
 * Parsing the request into a xml object
 * @param type request from ting-client
 * @return \SimpleXMLElement
 */
function openagency_webservice_mockup_parse_xml($soap){
  $pattern = "/:?SOAP-ENV:?/";
  $replace = '';
  $xml = preg_replace($pattern, $replace, $soap);
  
  $envelope = new SimpleXMLElement($xml);
  return $envelope;
}

function openagency_webservice_mockup_access() {
  return TRUE;
}